# Copyright (c) .NET Foundation and Contributors
# See LICENSE file in the project root for full license information.

trigger:
  branches:
    include:
      - main
      - develop
      - release-*
  paths:
    exclude:
      - .gitignore
      - .editorconfig
      - spelling_exclusion.dic
      - LICENSE.md
      - README.md
      - assets/*
      - .github/*

# PR always trigger build
pr:
  autoCancel: true

# add nf-tools repo to resources (for Azure Pipelines templates)
resources:
  repositories:
    - repository: templates
      type: github
      name: nanoframework/nf-tools
      endpoint: nanoframework

parameters:
- name: appComponents
  displayName: List of capabilities to run the tests on
  type: object
  default:
    - none

stages:
- stage: Build
  displayName: 'Build'
  jobs:
  - job: Build
    displayName: 'Build job'
    pool:
      # default is the following VM Image
      vmImage: 'windows-latest'

    variables:
      - group: sign-client-credentials
      - name: DOTNET_NOLOGO
        value: true  
      - name: buildPlatform
        value: 'Any CPU'  
      - name: buildConfiguration
        value: 'Release'
      - name: solution
        value: 'nanoFramework.MessagePack.sln'
      - name: nugetPackageName
        value: 'nanoFramework.MessagePack'

    steps:

      # step from template @ nf-tools repo
      # all build, update and publish steps
      - template: azure-pipelines-templates/class-lib-build.yml@templates
        parameters:
          sonarCloudProject: 'nanoframework_nanoFramework.MessagePack'
          runUnitTests: true
          unitTestRunsettings: '$(System.DefaultWorkingDirectory)\NFUnitTest\nano.runsettings'

      # step from template @ nf-tools repo
      # report error
      - template: azure-pipelines-templates/discord-webhook-task.yml@templates  
        parameters:
          status: 'failure'
          webhookUrl: '$(DiscordWebhook)'
          message: ''

      - task: PublishPipelineArtifact@1
        displayName: Publish Pipeline Artifact copy
        inputs:
          path: '$(System.DefaultWorkingDirectory)'
          artifactName: 'Artifacts'

- ${{ each appComponents in parameters.appComponents }}:
  - ${{ if ne(appComponents, 'none') }}:
    - template: azure-pipelines-templates/device-test.yml@templates
      parameters:
        appComponents: ${{ appComponents }}
        unitTestRunsettings: 
          - 'NFUnitTest/nano.runsettings,NFUnitTest/bin/Release/NFUnitTest.dll'
